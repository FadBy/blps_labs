plugins {
	id 'java'
	id 'org.springframework.boot' version '3.2.3'
	id 'io.spring.dependency-management' version '1.1.4'
}

group = 'com.blps'
version = '0.0.1-SNAPSHOT'

java {
	toolchain {
		languageVersion = JavaLanguageVersion.of(17)
	}
}

configurations {
	compileOnly {
		extendsFrom annotationProcessor
	}
}

repositories {
	mavenCentral()
}

dependencies {
	implementation 'javax.xml.bind:jaxb-api:2.3.1'
	implementation 'org.glassfish.jaxb:jaxb-runtime:2.3.1'
	implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
	implementation 'org.springframework.boot:spring-boot-starter-web'
	implementation 'javax.resource:javax.resource-api:1.7.1'
	implementation 'org.eclipse.angus:angus-mail:2.0.2'

	// Transaction management
	implementation 'org.springframework:spring-tx'
	implementation("javax.jms:javax.jms-api:2.0.1")

	// Swagger/OpenAPI documentation
	implementation 'org.springdoc:springdoc-openapi-starter-webmvc-ui:2.2.0'

	implementation 'io.jsonwebtoken:jjwt-api:0.11.5'
	implementation platform("com.atomikos:transactions-essentials-jakarta:6.0.0")
	implementation "com.atomikos:transactions-spring-boot3-starter:6.0.0"
	implementation "com.atomikos:transactions-jta:6.0.0:jakarta"
	implementation 'jakarta.transaction:jakarta.transaction-api:2.0.1'
	implementation 'org.springframework.kafka:spring-kafka'
	implementation 'org.apache.kafka:kafka-clients:3.6.1'
	runtimeOnly 'io.jsonwebtoken:jjwt-impl:0.11.5'
	runtimeOnly 'io.jsonwebtoken:jjwt-jackson:0.11.5'
	implementation 'com.itextpdf:itextpdf:5.5.13.3'
	implementation 'org.springframework.boot:spring-boot-starter-security'
	testImplementation 'org.springframework.security:spring-security-test'
	compileOnly 'org.projectlombok:lombok'
	runtimeOnly 'org.postgresql:postgresql'
	annotationProcessor 'org.projectlombok:lombok'
	testImplementation 'org.springframework.boot:spring-boot-starter-test'
	testRuntimeOnly 'org.junit.platform:junit-platform-launcher'
	runtimeOnly 'com.h2database:h2'

	// Camunda
	implementation("org.camunda.bpm.springboot:camunda-bpm-spring-boot-starter-webapp:7.23.0")
	implementation("org.camunda.bpm.springboot:camunda-bpm-spring-boot-starter-rest:7.23.0")
}

//tasks.named('test') {
//	useJUnitPlatform()
//}

task runSecondInstance(type: org.springframework.boot.gradle.tasks.run.BootRun) {
	group = 'application'
	description = 'Runs the second instance of the application on port 8082'
	doFirst {
		mainClass.set('com.blps.lab1.Lab1Application')
		classpath = sourceSets.main.runtimeClasspath
		systemProperty('spring.profiles.active', '2')
		systemProperty('server.port', '8082')
	}
}
